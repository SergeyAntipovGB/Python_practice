import os
os.system('clear')
'''
Дан массив, состоящий из целых чисел. Напишите программу, которая
в данном массиве определит количество элементов, у которых два соседних
и, при этом, оба соседних элемента меньше данного. Сначала вводится число
N — количество элементов в массиве Далее записаны N чисел — элементы массива.
Массив состоит из целых чисел.
Ввод: Ввод:
55
1 2 3 4 5 15151
Вывод: Вывод:
02
'''


# def fun(n, count = 0):
#     if n == 0: return count
#     if a[n-1]<a[n] and a[n+1]<a[n]:count+=1
#     return fun (n-1,count)

# a = [15, 8, 10, 8, 4, 9, 11, 8]
# n = len(a)
# print(fun(n-1))


'''
Задача No45. Решение в группах
Два различных натуральных числа n и m называются дружественными,
если сумма делителей числа n (включая 1, но исключая само n) равна
числу m и наоборот. Например, 220 и 284 – дружественные числа. По
данному числу k выведите все пары дружественных чисел, каждое из
которых не превосходит k. Программа получает на вход одно натуральное
число k, не превосходящее 105. Программа должна вывести все пары
дружественных чисел, каждое из которых не превосходит k. Пары
необходимо выводить по одной в строке, разделяя пробелами. Каждая
пара должна быть выведена только один раз (перестановка чисел
новую пару не дает).
Ввод: Вывод:
300 220 284
10 минут
'''

# def div(max, count = 0, step = 1):
#     '''
#     Функция возвращает count - количество
#     делителей заданного числа max: [1, max)
#     '''
#     if step == max // 2 + 1: return count
#     if max % step == 0: count += step
#     return div(max, count, step + 1)

# def sum(step1, step2):
#     '''
#     Функция выбирает пары дружественных чисел
#     из заданного промежутка [1, k]
#     '''
#     if step1 == 1: return
#     if step2 == 0: sum(step1 - 1, step1 - 2)
#     else:
#         if div(step1) == div(step2): print(step1, step2)
#         sum(step1, step2 - 1)    
        
# k = 16
# sum(k, k - 1)

# def sum(friends):     # вариант решения вложенными циклами
#     for i in range(k, 1, -1):
#         first = div(i)
#         for j in range(i - 1, 0, -1):
#             second = div(j)
#             if first == second:
#                 print(i, j)
#                 break

'''
1. Дано натуральное число *N* и последовательность из *N* элементов.
Требуется вывести эту последовательность в обратном порядке.

***Примечание.*** В программе запрещается объявлять массивы и
использовать циклы (даже для ввода и вывода).
'''


